{"version":3,"sources":["../src/array-for-each-x.js"],"names":[],"mappings":"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","file":"array-for-each-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport toLength from 'to-length-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\n\n/** @type {ArrayConstructor} */\nconst ArrayCtr = [].constructor;\n/** @type {ObjectConstructor} */\nconst castObject = {}.constructor;\n/** @type {BooleanConstructor} */\nconst castBoolean = true.constructor;\nconst nativeForEach = typeof ArrayCtr.prototype.forEach === 'function' && ArrayCtr.prototype.forEach;\n\nlet isWorking;\n\nif (nativeForEach) {\n  let spy = 0;\n  let res = attempt.call([1, 2], nativeForEach, (item) => {\n    spy += item;\n  });\n\n  isWorking = res.threw === false && typeof res.value === 'undefined' && spy === 3;\n\n  if (isWorking) {\n    spy = '';\n    res = attempt.call(castObject('abc'), nativeForEach, (item) => {\n      spy += item;\n    });\n\n    isWorking = res.threw === false && typeof res.value === 'undefined' && spy === 'abc';\n  }\n\n  if (isWorking) {\n    spy = 0;\n    res = attempt.call(\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })(1, 2, 3),\n      nativeForEach,\n      (item) => {\n        spy += item;\n      },\n    );\n\n    isWorking = res.threw === false && typeof res.value === 'undefined' && spy === 6;\n  }\n\n  if (isWorking) {\n    spy = 0;\n    res = attempt.call(\n      {\n        0: 1,\n        1: 2,\n        3: 3,\n        4: 4,\n        length: 4,\n      },\n      nativeForEach,\n      (item) => {\n        spy += item;\n      },\n    );\n\n    isWorking = res.threw === false && typeof res.value === 'undefined' && spy === 6;\n  }\n\n  if (isWorking) {\n    const doc = typeof document !== 'undefined' && document;\n\n    if (doc) {\n      spy = null;\n      const fragment = doc.createDocumentFragment();\n      const div = doc.createElement('div');\n      fragment.appendChild(div);\n      res = attempt.call(fragment.childNodes, nativeForEach, (item) => {\n        spy = item;\n      });\n\n      isWorking = res.threw === false && typeof res.value === 'undefined' && spy === div;\n    }\n  }\n\n  if (isWorking) {\n    const isStrict = (function returnIsStrict() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      return castBoolean(this) === false;\n    })();\n\n    if (isStrict) {\n      spy = null;\n      res = attempt.call(\n        [1],\n        nativeForEach,\n        () => {\n          /* eslint-disable-next-line babel/no-invalid-this */\n          spy = typeof this === 'string';\n        },\n        'x',\n      );\n\n      isWorking = res.threw === false && typeof res.value === 'undefined' && spy === true;\n    }\n  }\n\n  if (isWorking) {\n    spy = {};\n    const fn = [\n      'return nativeForEach.call(\"foo\", function (_, __, context) {',\n      'if (castBoolean(context) === false || typeof context !== \"object\") {',\n      'spy.value = true;}});',\n    ].join('');\n\n    /* eslint-disable-next-line no-new-func */\n    res = attempt(Function('nativeForEach', 'spy', 'castBoolean', fn), nativeForEach, spy);\n\n    isWorking = res.threw === false && typeof res.value === 'undefined' && spy.value !== true;\n  }\n}\n\n/**\n * This method executes a provided function once for each array element.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n */\nlet $forEach;\n\nif (nativeForEach) {\n  $forEach = function forEach(array, callBack /* , thisArg */) {\n    const args = [callBack];\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      args[1] = arguments[2];\n    }\n\n    return nativeForEach.apply(array, args);\n  };\n} else {\n  $forEach = function forEach(array, callBack /* , thisArg */) {\n    const object = toObject(array);\n    // If no callback function or if callback is not a callable function\n    assertIsFunction(callBack);\n    const iterable = splitIfBoxedBug(object);\n    const length = toLength(iterable.length);\n    let thisArg;\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      thisArg = arguments[2];\n    }\n\n    const noThis = typeof thisArg === 'undefined';\n    for (let i = 0; i < length; i += 1) {\n      if (i in iterable) {\n        if (noThis) {\n          callBack(iterable[i], i, object);\n        } else {\n          callBack.call(thisArg, iterable[i], i, object);\n        }\n      }\n    }\n  };\n}\n\nconst arrayForEach = $forEach;\n\nexport default arrayForEach;\n"]}